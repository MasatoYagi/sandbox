package main

// https://ascii.jp/elem/000/001/276/1276572/
// TCPソケットを使ったHTTPサーバ

// HTTP通信を効率化する手法として、圧縮により通信量を削減する手法と、
// リクエストごとのレスポンスの初動をチャンク送信で高速化する手法を、ソケットを使って実装してみました。
// 最後に紹介するのは、送受信を非同期化することでトータルの通信にかかる時間を大幅に減らす方法です。

// この機能はパイプライニングと呼ばれ、HTTP/1.1の規格にも含まれています。
// パイプライニングでは、レスポンスがくる前に次から次にリクエストを多重で飛ばすことで、
// 最終的に通信が完了するまでの時間を短くします。

func main() {

}
